<?xml version="1.0"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<rfc docName="draft-ietf-idr-bgp-model-03" ipr="trust200902" category="std">
<?rfc toc="yes"?>
  <front>
    <title abbrev="BGP Model">BGP Model for Service Provider Networks</title>
    <author role="editor" initials="A." surname="Shaikh" fullname="Anees Shaikh">
      <organization>Google</organization>
      <address>
        <postal>
          <street>1600 Amphitheatre Pkwy</street>
          <city>Mountain View</city>
          <region>CA</region>
          <code>94043</code>
          <country>US</country>
        </postal>
        <email>aashaikh@google.com</email>
      </address>
    </author>

    <author role="editor" initials="R." surname="Shakir" fullname="Rob Shakir">
      <organization abbrev="Jive Communications">        Jive Communications, Inc.    </organization>
      <address>
  <postal>
    <street>1275 West 1600 North, Suite 100</street>
    <city>Orem</city>
    <region>UT</region>
    <code>84057</code>
  </postal>
  <email>rjs@rob.sh</email>
      </address>
    </author>

    <author role="editor" fullname="Keyur Patel" initials="K.P."
            surname="Patel">
      <organization>Cisco</organization>
      <address>
        <postal>
          <street>170 W. Tasman Drive</street>
          <city>San Jose</city>
          <region>CA</region>
          <code>95134</code>
          <country>USA</country>
        </postal>
        <email>keyupate@cisco.com</email>
      </address>
    </author>

    <author role="editor" fullname="Susan Hares" initials="S."
            surname="Hares">
      <organization>Huawei</organization>
      <address>
        <postal>
          <street>7453 Hickory Hill</street>
          <city>Saline</city>
          <region>MI</region>
          <code>48176</code>
          <country>USA</country>
        </postal>
        <email>shares@ndzh.com</email>
      </address>
    </author>

    <author initials="K." surname="D'Souza" fullname="Kevin D'Souza">
      <organization>AT&amp;T</organization>
      <address>
        <postal>
          <street>200 S. Laurel Ave</street>
          <city>Middletown</city>
          <region>NJ</region>
          <country>US</country>
        </postal>
        <email>kd6913@att.com</email>
      </address>
    </author>
    <author initials="D." surname="Bansal" fullname="Deepak Bansal">
      <organization>Microsoft</organization>
      <address>
        <postal>
          <street>205 108th Ave. NE, Suite 400</street>
          <city>Bellevue</city>
          <region>WA</region>
          <country>US</country>
        </postal>
        <email>dbansal@microsoft.com</email>
      </address>
    </author>

    <author fullname="Alexander Clemm" initials="A."
            surname="Clemm">
      <organization>Cisco</organization>
      <address>
        <postal>
          <street>170 W. Tasman Drive</street>
          <city>San Jose</city>
          <region>CA</region>
          <code>95134</code>
          <country>USA</country>
        </postal>
        <email>alex@cisco.com</email>
      </address>
    </author>

    <author fullname="Aleksandr Zhdankin" initials="A."
            surname="Zhdankin">
      <organization>Cisco</organization>
      <address>
        <postal>
          <street>170 W. Tasman Drive</street>
          <city>San Jose</city>
          <region>CA</region>
          <code>95134</code>
          <country>USA</country>
        </postal>
        <email>azhdanki@cisco.com</email>
      </address>
    </author>

    <author fullname="Mahesh Jethanandani" initials="M."
            surname="Jethanandani">
      <organization>Cisco Systems, Inc</organization>
      <address>
        <postal>
          <street>180 W. Tasman Drive</street>
          <city>San Jose</city>
          <region>CA</region>
          <code>95134</code>
          <country>USA</country>
        </postal>
        <phone>+1 408.526.8763</phone>
        <facsimile/>
        <email>mjethanandani@gmail.com</email>
        <uri/>
      </address>
    </author>

    <author fullname="Xyfeng Liu" initials="X."
            surname="Liu">
      <organization>Ericsson</organization>
      <address>
        <postal>
          <street>1595 Spring Hill Road, Suite 500</street>
          <city>Vienna</city>
          <region>VA</region>
          <code>22182</code>
          <country>USA</country>
        </postal>
        <email>xufeng.liu@ericsson.com</email>
      </address>
    </author>

    <date month="August" year="2017" />
    <area>Routing</area>
    <workgroup>Interdomain Routing</workgroup>
    <keyword>bgp</keyword>
    <keyword>yang</keyword>

    <abstract>
      <t>This document defines a YANG data model for configuring and
        managing BGP, including protocol, policy, and operational
        aspects based on data center, carrier and content provider operational requirements.
      </t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction" anchor="intro">
      <t>
        YANG <xref target="RFC6020"/> is a data modeling language that was
        introduced to define data for managing networked devices using NETCONF
        <xref target="RFC6241"/>. YANG is proving relevant beyond its initial
        confines, as bindings to other interfaces (e.g. ReST) and encodings
        other than XML (e.g. JSON) are being defined.  Furthermore, YANG data
        models can be used as the basis of implementation for a number of
        interfaces, such as CLIs and  programmatic APIs (e.g., see <xref
        target="I-D.talwar-rtgwg-grpc-use-cases" />).
      </t>

      <t>
        This document describes a YANG data model for the <xref target="RFC4271">BGP</xref> protocol, including various protocol extensions, policy configuration, as well as defining key operational state data.  The model is intended to be vendor-neutral, in order to allow
        operators to manage BGP configuration in heterogeneous
        environments with routers supplied by multiple vendors.  The
        model is also intended to be readily mapped to existing
        implementations to facilitate support from as large a
        set of routing hardware and software vendors as possible.
      </t>
      <section title = "Goals and approach" anchor="goals">
        <t>
          The model covers the base BGP features that
          are deployed across major implementations and the
          common BGP configurations in use across a number of
          operator network deployments. In particular,
          this model attempts to cover BGP features defined in
          <xref target="RFC4271"></xref>, <xref target="RFC1997"></xref>,
          <xref target="RFC4456"></xref>, <xref target="RFC4760"></xref>,
          <xref target="RFC3065"></xref>, <xref target="RFC2439"></xref>,
          <xref target="RFC4724"></xref>, and <xref target="RFC6811"></xref>.
        </t>

        <t>
          Along with configuration of base BGP features, this model also
          addresses policy configuration, by providing "hooks" for applying
          policies, and also defining BGP-specific policy features.  The
          BGP policy features are intended to be used with the general
          routing policy model defined in <xref target="I-D.ietf-rtgwg-policy-model" />.
          The model also supports operational state data to provide a common model for reading BGP-related state from a BGP speaker.
        </t>
        <t>
         For the base BGP features, the focus of the model described in this document is on providing configuration and operational state information
         relating to:
        <list style="symbols">
          <t>
            The global BGP instance, and neighbors whose configuration is
            specified individually, or templated with the use of peer-groups.
           </t>
           <t>
             The address families that are supported by peers, and the
             global configuration which relates to them.
           </t>
           <t>
             The policy configuration "hooks" and BGP-specific policy
             features that relate to a neighbor - controlling the import and export of NLRIs.
           </t>
         </list>
        </t>

        <t>
          As mentioned earlier, any configuration items that are
          deemed to be widely available
          in existing major BGP implementations are included in the
          model.  Additional, more esoteric, configuration items that are not
          commonly used, or only available from
          a single implementation, are omitted from the model with an
          expectation that they will be available in companion modules that
          augment or extend the current model.  This allows clarity in identifying
          data that is part of the vendor-neutral base model.
        </t>

        <t>
          Where possible, naming in the model follows conventions
          used in available standards documents, and otherwise tries to
          be self-explanatory with sufficient descriptions of the
          intended behavior.  Similarly, configuration data value
          constraints and default values, where used, are based on
          recommendations in current standards documentation, or those commonly
          used in multiple implementations.  Since implementations can vary
          widely in this respect, this version of
          the model specifies only a limited set of defaults and ranges
          with the expectation of being more prescriptive in future
          versions based on actual operator use.
        </t>
      </section>
    </section>

    <section title="Model overview" anchor="overview">
      <t>The BGP model is defined across several YANG modules and submodules,
        but at a high level is organized into six elements:
      </t>
        <t>
        <list style="symbols">
          <t> base protocol configuration -- configuration affecting BGP
            protocol-related operations, defined at various levels
            of hierarchy.
          </t>
          <t> multiprotocol configuration -- configuration affecting
            individual address-families within BGP <xref target="RFC4760" />.
          </t>
          <t> neighbor configuration -- configuration affecting an
            individual neighbor within BGP.
          </t>
          <t> neighbor multiprotocol configuration -- configuration affecting
            individual address-families for a neighbor within BGP.
          </t>
          <t> policy configuration -- hooks for application of the policies
              defined in <xref target="I-D.ietf-rtgwg-policy-model" />
              that act on routes sent (received) to (from)
              peers or other routing protocols and BGP-specific policy features.
          </t>
          <t> operational state -- variables used for monitoring and
            management of BGP operations.
          </t>
        </list>
      </t>
      <t>
        These modules also make use of standard Internet types, such
        as IP addresses and prefixes, autonomous system numbers, etc., defined in
        <xref target="RFC6991">RFC 6991</xref>.
      </t>
      <t>
        Throughout the model, the approach described in <xref
        target="I-D.openconfig-netmod-opstate" /> is used to represent
        configuration (intended state), operational and derived state data.
        That is to say, that each container holds a "config" and "state"
        sub-container - with the config container being used for configurable
        parameters, and the state container container holding
        both the operational state of configurable leaves, and derived
        counters and statistical information.
      </t>
        <section title="BGP protocol configuration"
          anchor="overview.protocol">
          <t>The BGP protocol configuration model is organized
            hierarchically, much like the majority of router
            implementations.  That is, configuration items can be
            specified at multiple levels, as shown below.
          </t>
          <figure>
            <artwork>
              +--rw bgp!
                 +--rw global
                 |  +-- (global-configuration-options)
                 +--rw neighbors
                 |  +--rw neighbor* [neighbor-address]
                 |  +-- (neighbor-configuration-options)
                 +--rw peer-groups
                    +--rw peer-group* [peer-group-name]
                    +-- (neighbor-configuration-options)
            </artwork>
          </figure>
          <t>
            Users may specify configuration at a higher level and
            have it apply to all lower-level items, or provide
            overriding configuration at a lower level of the
            hierarchy. Overriding configuration items are optional, with
            neighbor specific configuration being the most specific or lowest
            level, followed by peer-group, and finally global.
            Global configuration options reflect a subset of the
            peer-group or neighbor specific configuration options which
            are relevant to the entire BGP instance.
          </t>
          <t>
            The model makes the simplifying assumption that most of
            the configuration items are available at all levels of the
            hierarchy.  That is, very little configuration is specific
            to a particular level in the hierarchy, other than obvious
            items such as "group-name" only being available for the
            peer group-level config.  A notable exception is for
            sub-address family configuration where some items are only
            applicable for a given AFI-SAFI combination.
          </t>
          <t>
            In order to allow common configuration to be applied to
            a set of neighbors, all neighbor configuration options
            are available within a peer-group. A neighbor is associated
            to a particular peer-group through the use of a peer-group
            leaf (which provides a reference to a configured item in
            the peer-group list).
          </t>
          <t>
            Address-family configuration is made available in multiple
            points within the model - primarily within the global container,
            where instance-wide configuration can be set (for example,
            global protocol parameters, the BGP best path route selection options,
            or global policies relating
            to the address-family); and on a per-neighbor or per-peer-group
            basis, where address-families can be enabled or disabled, and
            policy associated with the parent entity applied. Within the afi-safi
            container, generic configuration that applies to all address-families
            (e.g., whether the AFI-SAFI is enabled) is presented at the top-level,
            with address-family specific containers made available for options
            relating to only that AFI-SAFI. Within the current revision of the model
            a generic set of address-families, and common configuration and state
            options are included - further work is expected to add additional parameters
            to this area of the model.
          </t>
          <t>
            The following address-families are currently supported by the model:
          </t>
    <figure>
      <artwork>
        +--rw bgp!
          +--rw global
             +--rw afi-safis
                +--rw afi-safi* [afi-safi-name]
                   +--rw afi-safi-name    -> ../config/afi-safi-name
                   |
                   +--rw ipv4-unicast
                   |     ...
                   +--rw ipv6-unicast
                   |     ...
                   +--rw ipv4-labelled-unicast
                   |     ...
                   +--rw ipv6-labelled-unicast
                   |     ...
                   +--rw l3vpn-ipv4-unicast
                   |     ...
                   +--rw l3vpn-ipv6-unicast
                   |     ...
                   +--rw l3vpn-ipv4-multicast
                   |     ...
                   +--rw l3vpn-ipv6-multicast
                   |     ...
                   +--rw l2vpn-vpls
                   |     ...
                   +--rw l2vpn-evpn
                   |     ...
      </artwork>
    </figure>

        </section>

        <section title="Policy configuration overview"
          anchor="overview.policy">
          <t>
            The BGP policy configuration model references the generic
            YANG routing policy model described in <xref
            target="I-D.ietf-rtgwg-policy-model" />, which
            represents a condition-action policy framework for routing. This
            model adds BGP-specific conditions (e.g., matching on
            the community attribute), and actions (e.g., setting
            local preference) to the generic policy framework.
          </t>
          <t>
            Policies that are defined in the routing-policy model
            are referenced in multiple places within the model:
            <list style="symbols">
              <t>within the global instance, where a policy applies to
                 all address-families for all peers.</t>
              <t>on a global AFI-SAFI basis, where policies apply to
                all peers for a particular address-family.</t>
              <t>on a per-peer-group or per-neighbor basis - where the
                policy applies to all address-families for the particular
                group or neighbor.</t>
              <t>on a per-afi-safi basis within a neighbor or peer-group
                context, where the policy is specific to the AFI-SAFI for a
                a specific neighbor or group.</t>
            </list>
          </t>
          <figure>
            <artwork>
           +--rw bgp
              +--rw global
              |  +--rw afi-safi
              |  |  +--rw afi-safi* [afi-safi-name]
              |  |     +--rw apply-policy
              |  +--rw apply-policy
              +--rw neighbors
              |  +--rw neighbor* [neighbor-address]
              |     +--rw afi-safi
              |     |  +--rw afi-safi* [afi-safi-name]
              |     |     +--rw apply-policy
              |     +--rw apply-policy
              +--rw peer-groups
                 +--rw peer-group* [peer-group-name]
                    +--rw afi-safi
                    |  +--rw afi-safi* [afi-safi-name]
                    |     +--rw apply-policy
                    +--rw apply-policy
            </artwork>
          </figure>
        </section>
        <section title="Operational state overview"
          anchor="overview.operational">
          <t>
            The BGP operational model contains data which
            relates to the operational state of the various elements of the
            BGP router. As noted in <xref target="overview" /> - the approach
            described in <xref target='I-D.openconfig-netmod-opstate' /> is
            utilized for the inclusion of operational and statistical data. To
            this end, the "-state" groupings (those that contain derived
            operational parameters) are contained within the BGP operational
            model - and included within the relevant "state" containers throughout
            the core BGP model. In some cases, operational information may be
            relevant to one instance of a common grouping, but not another - for
            example, the number of received, advertised, and installed prefixes is
            relevant on a per-neighbor-basis, but is not required (or meaningful)
            in the peer-group context. Groupings are defined with the appropriate
            operational state data accordingly.
          </t>
        </section>
    </section>

    <section title="Relation to other YANG data models">
      <t>
        The BGP model is intended to work within a larger framework model, such
        as the Network Instance model <xref target="I-D.openconfig-rtgwg-network-instance" />
        which provides a comprehensive model for defining
        VRFs, associated routing protocols, multiple protocol instances, and
        inter-protocol and inter-instance routing policies.  The current version
        of the model imports and instantiates the BGP model in its tree at
        /network-instances/network-instance/protocols/protocol/bgp/...
      </t>
      <t>
        It is also possible to integrate the BGP model with the Routing
        Management model <xref target="I-D.ietf-netmod-routing-cfg" /> or the
        Network Device Organizational Model <xref target="I-D.rtgyangdt-rtgwg-device-model" />,
        both of which define the notion of routing instances,
        or VRFs.
      </t>
    </section>

    <section title="Security Considerations">

      <t>BGP configuration has a significant impact on network operations,
      and as such any related protocol or model carries potential
      security risks.
      </t>

      <t>YANG data models are generally designed to be used with the
      NETCONF protocol over an SSH transport.  This provides an
      authenticated and secure channel over which to transfer BGP
      configuration and operational data.  Note that use of
      alternate transport or data encoding (e.g., JSON over HTTPS)
      would require similar mechanisms for authenticating and
      securing access to configuration data.
      </t>

      <t>Most of the data elements in the configuration model could be
      considered sensitive from a security standpoint.  Unauthorized
      access or invalid data could cause major disruption.
      </t>

    </section>
<!--
    <section anchor="contributors" title="Contributors">
      <t>
      In addition to the authors listed on the front page, the following
      individuals have also helped to shape this document:
      </t>
    </section>
-->

    <section title="IANA Considerations">

      <t>
      An appropriate namespace URI will be
      registered in the <xref target="RFC3688">IETF XML Registry"</xref>.  The BGP YANG modules will be registered in the "YANG Module Names" registry <xref target="RFC6020" />.
      </t>
    </section>

    <section title="YANG modules" anchor="models">

      <t>The modules comprising the BGP configuration and
      operational model are described by the YANG modules and
      submodules in the sections below.
      </t>
      <t>
        The main module, openconfig-bgp.yang, includes the following submodules:
        <list style="symbols">
          <t>
            openconfig-bgp-common - defines the groupings that are common across
            more than one context (where contexts are neighbor, group, global)
          </t>
          <t>
            openconfig-bgp-common-multiprotocol - defines the groupings that
            are common across more than one context, and relate to multiprotocol
            BGP
          </t>
          <t>
            openconfig-bgp-common-structure - defines groupings that are shared
            by multiple contexts, but are used only to create structural elements,
            i.e., containers (leaf nodes are defined in separate groupings)
          </t>
          <t>
            openconfig-bgp-global - groupings with data specific to the global
            context
          </t>
          <t>
            openconfig-bgp-peer-group - groupings with data specific to the
            peer group context
          </t>
          <t>
            openconfig-bgp-neighbor - groupings with data specific to the
            neighbor context
          </t>
        </list>
        Additional modules include:
        <list style="symbols">
          <t>
            openconfig-bgp-types - common type and identity definitions for
            BGP, including BGP policy
          </t>
          <t>
            openconfig-bgp-policy - BGP-specific policy data definitions for
            use with <xref target="I-D.ietf-rtgwg-policy-model" /> (described
            in more detail <xref target="overview.policy" />)
          </t>
        </list>
      </t>
    </section>

    <section title="BGP main module and submodule for base items">
      <figure>
        <artwork><![CDATA[
<CODE BEGINS> file "ietf-bgp.yang"
<?yfile include="/tmp/ietf-bgp.yang"?>
<CODE ENDS>
 ]]>
        </artwork>
      </figure>

      <figure>
        <artwork><![CDATA[
<CODE BEGINS> file "ietf-bgp-common.yang"
<?yfile include="/tmp/ietf-bgp-common.yang"?>
<CODE ENDS>
 ]]>
        </artwork>
      </figure>
      <figure>
        <artwork><![CDATA[
<CODE BEGINS> file "ietf-bgp-common-multiprotocol.yang"
<?yfile include="/tmp/ietf-bgp-common-multiprotocol.yang"?>
<CODE ENDS>
 ]]>
        </artwork>
      </figure>
      <figure>
        <artwork><![CDATA[
<CODE BEGINS> file "ietf-bgp-common-structure.yang"
<?yfile include="/tmp/ietf-bgp-common-structure.yang"?>
<CODE ENDS>
 ]]>
        </artwork>
      </figure>
      <figure>
        <artwork><![CDATA[
<CODE BEGINS> file "ietf-bgp-peer-group.yang"
<?yfile include="/tmp/ietf-bgp-peer-group.yang"?>
<CODE ENDS>
 ]]>
        </artwork>
      </figure>
      <figure>
        <artwork><![CDATA[
<CODE BEGINS> file "ietf-bgp-neighbor.yang"
<?yfile include="/tmp/ietf-bgp-neighbor.yang"?>
<CODE ENDS>
 ]]>
        </artwork>
      </figure>
      <figure>
        <artwork><![CDATA[
<CODE BEGINS> file "ietf-bgp-global.yang"
<?yfile include="/tmp/ietf-bgp-global.yang"?>
<CODE ENDS>
 ]]>
        </artwork>
      </figure>
    </section>

    <section title="BGP types">
      <figure>
        <artwork><![CDATA[
<CODE BEGINS> file "ietf-bgp-types.yang"
<?yfile include="/tmp/ietf-bgp-types.yang"?>
<CODE ENDS>
       ]]>
        </artwork>
      </figure>
    </section>

    <section title="BGP policy data">
      <figure>
        <artwork><![CDATA[
    <CODE BEGINS> file "ietf-bgp-policy.yang"
    <?yfile include="/tmp/ietf-bgp-policy.yang"?>
    <CODE ENDS>
      ]]>
        </artwork>
      </figure>
    </section>


  </middle>

  <back>
    <references title="Normative references">
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6020.xml"?>
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6241.xml"?>
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4271.xml"?>
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.1997.xml"?>
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4456.xml"?>
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3065.xml"?>
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2439.xml"?>
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4724.xml"?>
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6811.xml"?>
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4760.xml"?>
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6991.xml"?>
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3688.xml"?>
    </references>
    <references title="Informative references">
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-rtgwg-policy-model"?>
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.openconfig-netmod-opstate"?>
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-netmod-routing-cfg"?>
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.rtgyangdt-rtgwg-device-model"?>
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.openconfig-rtgwg-network-instance"?>
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.talwar-rtgwg-grpc-use-cases"?>
      <!--<reference anchor="I-D.rtgyangdt-rtgwg-device-model">
        <front>
          <title>Network Device YANG Organizational Model</title>
          <author initials="A." surname="Lindem" fullname="Acee Lindem">
            <organization>Cisco</organization>
          </author>
          <author initials="L." surname="Berger" fullname="Lou Berger" role="editor">
            <organization>LabN</organization>
          </author>
          <author initials="D." surname="Bogdanovic" fullname="Dean Bogdanovic">
          </author>
          <author initials="C." surname="Hopps" fullname="Christian Hopps">
            <organization>Deustche Telekom</organization>
          </author>
          <date year="2015" month="July"/>
        </front>
        <seriesInfo name="Internet-Draft" value="draft-rtgyangdt-rtgwg-device-model-00" />
      </reference>-->
    </references>

    <section title="Acknowledgements">
      <t>
      The authors are grateful for valuable contributions to this
      document and the associated models from: Ebben Aires, Pavan
      Beeram, Chris Chase, Ed Crabbe, Luyuan Fang, Bill Fenner, Akshay
      Gattani, Josh George, Vijay Gill, Matt John, Jeff Haas, Dhanendra Jain, Acee Lindem,
      Ina Minei, Carl Moberg, Ashok Narayanan, Einar Nilsen-Nygaard, Adam
      Simpson, Puneet Sood, Jason Sterne, Jeff Tantsura, Jim Uttaro, and Gunter Vandevelde.
      </t>
    </section>
    <section title="Change summary">
      <section title="Changes between revisions -01 and -02">
        <t>
          <list style="symbols">
            <t>
              Refactored BGP model such that it is comprised of multiple
              sub-modules rather than independent modules.
            </t>
            <t>
              Remove the need for self-augmentation of the BGP model to allow
              the ability to import the model in wider structures more easily.
            </t>
            <t>
              Added new operational state values for BGP session established
              transitions and last-established timestamp.  Also deprecated uptime
              operational state leaf.
            </t>
            <t> Added ability to select eligible paths for add-paths based
                on a policy.
            </t>
          </list>
        </t>
      </section>
      <section title="Changes between revisions -00 and -01">
        <t>
          <list style="symbols">
            <t>
              Updated module namespaces to reflect IETF standard namespace.
            </t>
            <t>
              Updated module filenames with ietf- prefix per RFC 6087 guidelines.
            </t>
          </list>
        </t>
      </section>
    </section>

  </back>
</rfc>
